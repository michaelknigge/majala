//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.17929
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MK.Majala.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MK.Majala.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory ´{0}´ does not contain a valid Java installation. ähnelt.
        /// </summary>
        internal static string DirectoryContainsNoJava {
            get {
                return ResourceManager.GetString("DirectoryContainsNoJava", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The working directory could not be set. ähnelt.
        /// </summary>
        internal static string ErrorSettingWorkingDirectory {
            get {
                return ResourceManager.GetString("ErrorSettingWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Registering available JVM version {0} in directory {1}. ähnelt.
        /// </summary>
        internal static string LogAddVirtualMachine {
            get {
                return ResourceManager.GetString("LogAddVirtualMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Getting all installed Java version from the registry (key {0}). ähnelt.
        /// </summary>
        internal static string LogAddVirtualMachinesFromRegistry {
            get {
                return ResourceManager.GetString("LogAddVirtualMachinesFromRegistry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory `{0}` contains no JVM. ähnelt.
        /// </summary>
        internal static string LogJavaHomeIsNotValid {
            get {
                return ResourceManager.GetString("LogJavaHomeIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die JVM version {0} is suitable and will be used. ähnelt.
        /// </summary>
        internal static string LogJvmIsOk {
            get {
                return ResourceManager.GetString("LogJvmIsOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die JVM version {0} is too young. ähnelt.
        /// </summary>
        internal static string LogJvmIsTooOld {
            get {
                return ResourceManager.GetString("LogJvmIsTooOld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die JVM version {0} is too old. ähnelt.
        /// </summary>
        internal static string LogJvmIsTooYoung {
            get {
                return ResourceManager.GetString("LogJvmIsTooYoung", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trying to load JVM from user specified directory `{0}`. ähnelt.
        /// </summary>
        internal static string LogLoadCustomJvm {
            get {
                return ResourceManager.GetString("LogLoadCustomJvm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading JVM from directory `{0}`. ähnelt.
        /// </summary>
        internal static string LogLoadJvm {
            get {
                return ResourceManager.GetString("LogLoadJvm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing command line arguments. ähnelt.
        /// </summary>
        internal static string LogParseCommandLineArguments {
            get {
                return ResourceManager.GetString("LogParseCommandLineArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die JVM version {0} replaces version {1} in directory {2}. ähnelt.
        /// </summary>
        internal static string LogReplaceVirtualMachine {
            get {
                return ResourceManager.GetString("LogReplaceVirtualMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choosing a suitable JVM (minimum version {0}). ähnelt.
        /// </summary>
        internal static string LogRequiredJvmV1 {
            get {
                return ResourceManager.GetString("LogRequiredJvmV1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choosing a suitable JVM (minimum version {0}, maximum version {1}). ähnelt.
        /// </summary>
        internal static string LogRequiredJvmV2 {
            get {
                return ResourceManager.GetString("LogRequiredJvmV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changeing working directory to `{0}`. ähnelt.
        /// </summary>
        internal static string LogSetWorkingDirectory {
            get {
                return ResourceManager.GetString("LogSetWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No {0} bit Java version found. ähnelt.
        /// </summary>
        internal static string NoSuitableJavaFoundV1 {
            get {
                return ResourceManager.GetString("NoSuitableJavaFoundV1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No {0} bit Java version found that is older that version {1}. ähnelt.
        /// </summary>
        internal static string NoSuitableJavaFoundV2 {
            get {
                return ResourceManager.GetString("NoSuitableJavaFoundV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No {0} bit Java version found that is older than version {1} and not newer No {0} bit Java version found that is older than version {1} and not newer than version {2}. ähnelt.
        /// </summary>
        internal static string NoSuitableJavaFoundV3 {
            get {
                return ResourceManager.GetString("NoSuitableJavaFoundV3", resourceCulture);
            }
        }
    }
}
